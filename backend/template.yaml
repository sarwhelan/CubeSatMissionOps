AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    cubesat-backend

    Sample SAM Template for cubesat-backend
    
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 3


Resources:

    TemplateGetFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: cubesat-backend/
            Handler: template.getHandler
            Runtime: nodejs8.10
            Environment:
                Variables:
                    PARAM1: VALUE
            Events:
                HelloWorld:
                    Type: Api
                    Properties:
                        Path: /template
                        Method: get
    TemplatePostFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: cubesat-backend/
            Handler: template.postHandler
            Runtime: nodejs8.10
            Environment:
                Variables:
                    PARAM1: VALUE
            Events:
                HelloWorld:
                    Type: Api
                    Properties:
                        Path: /template
                        Method: post
    TemplateDBPostFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: cubesat-backend/
            Handler: db-template.dbPostHandler
            Runtime: nodejs8.10
            Policies:
                - DynamoDBCrudPolicy:
                    TableName: !Ref TemplateDBTable     # gives this lambda permission for all CRUD actions on TemplateDBTable
            Environment:
                Variables:
                    PARAM1: VALUE
            Events:
                HelloWorld:
                    Type: Api
                    Properties:
                        Path: /db-template
                        Method: post
    TemplateDBTable:
        Type: AWS::Serverless::SimpleTable      # more advanced tables can be created with AWS::DynamoDB::Table
        Properties:
            TableName: TemplateSimpleTable
            PrimaryKey:
                Name: id
                Type: String
                AWSTemplateFormatVersion: "2010-09-09"

    PassTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "PassID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "PassID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "Passes"

    TelecommandTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "TelecommandID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "TelecommandID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "Telecommands"

    PresetTelecommandTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "PresetTelecommandID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "PresetTelecommandID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "PresetTelecommands"

    TelecommandBatchTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "TelecommandBatchID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "TelecommandBatchID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "TelecommandBatches"

    QueuedTelecommandTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "QueuedTelecommandID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "QueuedTelecommandID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "QueuedTelecommands"

    ImagesTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "ImageID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "ImageID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "Images"

    SystemTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "SystemID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "SystemID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "Systems"

    ComponentTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "ComponentID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "ComponentID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "Components"

    TelemetryDataTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "TelemetryDataID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "TelemetryDataID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "TelemetryData"

    TelemetryTypeTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "TelemetryTypeID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "TelemetryTypeID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "TelemetryTypes"

    ComponentTelemetryTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "ComponentTelemetryID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "ComponentTelemetryID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "ComponentTelemetry"

    TelemetryRangeTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "TelemetryRangeID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "TelemetryRangeID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "TelemetryRanges"

    UserAlertSubscriptionTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "UserAlertSubscriptionID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "UserAlertSubscriptionID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "UserAlertSubscriptions"

    UserTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "UserID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "UserID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "Users"

    LogTable:
        Type: AWS::DynamoDB::Table
        Properties: 
            AttributeDefinitions:
                -
                    AttributeName: "LogID"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "LogID"
                    KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: "5"
                WriteCapacityUnits: "5"
            TableName: "Logs"
    
    # Authentication Resources
    CognitoUserPool:
        Type: AWS::Cognito::UserPool
        Properties:
            UserPoolName: CubeSatCognitoUserPool

    CognitoUserPoolClient:
        Type: AWS::Cognito::UserPoolClient
        Properties:
            ClientName: CubeSatCognitoClient
            GenerateSecret: false
            UserPoolId: !Ref CognitoUserPool
    
    CognitoIdPool:
        Type: AWS::Cognito::IdentityPool
        Properties:
            IdentityPoolName: CubeSatCognitoIdentityPool
            CognitoIdentityProviders:
                -
                    ClientId: !Ref CognitoUserPoolClient
                    ProviderName: !GetAtt CognitoUserPool.ProviderName
            AllowUnauthenticatedIdentities: false
    
    CognitoIAMUser:
        Type: AWS::IAM::User
        Properties:
            Policies:
                -
                    PolicyName: CognitoListUsers
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                            - 
                                Effect: Allow
                                Action:
                                - cognito-idp:ListUsers
                                Resource: !GetAtt CognitoUserPool.Arn
    
    CognitoIAMUserAccessKey:
        Type: AWS::IAM::AccessKey
        Properties:
            UserName: !Ref CognitoIAMUser
            
Outputs:

    CubeSatApi:
      Description: "API Gateway root URL for the Prod stage of the CubeSat API"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    
    CognitoAccessKey:
        Description: "Access key for the CognitoIAMUserAccessKey"
        Value: !Ref CognitoIAMUserAccessKey

    CognitoAccessKeySecretKey:
        Description: "Secret key for the CognitoIAMUserAccessKey"
        Value: !GetAtt CognitoIAMUserAccessKey.SecretAccessKey
